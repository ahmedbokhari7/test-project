<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="831" started-at="2021-07-08T18:03:56 PKT" finished-at="2021-07-08T18:03:57 PKT">
    <groups>
      <group name="add-book">
        <method signature="RestService.addBook(java.util.Map)[pri:1, instance:com.ahmed.rest.restapi.RestService@179ece50]" name="addBook" class="com.ahmed.rest.restapi.RestService"/>
      </group> <!-- add-book -->
    </groups>
    <test name="Test" duration-ms="831" started-at="2021-07-08T18:03:56 PKT" finished-at="2021-07-08T18:03:57 PKT">
      <class name="com.ahmed.rest.restapi.RestService">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.ahmed.rest.restapi.RestService@179ece50]" name="beforeSuite" is-config="true" duration-ms="7" started-at="2021-07-08T18:03:56 PKT" finished-at="2021-07-08T18:03:56 PKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.ahmed.rest.restapi.RestService@179ece50]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2021-07-08T18:03:56 PKT" finished-at="2021-07-08T18:03:56 PKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="addBook(java.util.Map)[pri:1, instance:com.ahmed.rest.restapi.RestService@179ece50]" name="addBook" duration-ms="741" started-at="2021-07-08T18:03:56 PKT" data-provider="addBook" finished-at="2021-07-08T18:03:57 PKT">
          <params>
            <param index="0">
              <value>
                <![CDATA[{resource=RESTAPI.RESOURCE.ADDBOOK, requestTemplateFileName=addBook.json, requestParameters=<requestParameters><![CDATA[
header|||Content-Type|||application/json
                    jsonBody|||isbn|||foo
                    jsonBody|||aisle|||1992
                    jsonBody|||author|||azen
                    jsonBody|||book_name|||restAssured]]]]><![CDATA[>
</requestParameters>
, responseParameters=<responseParameters><![CDATA[
                    http|||ResponseCode|||201
                    jsonBody|||msg|||Success Book is Added]]]]><![CDATA[>
</responseParameters>
, expectedResult=SUCCESS, scenarioName=adding new book in table, scenarioDesc=adding new book in table}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[path cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: path cannot be null
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:217)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1598)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1029)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:816)
at groovy.lang.GroovyObject.invokeMethod(GroovyObject.java:39)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:45)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:55)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.request(RequestSpecificationImpl.groovy:295)
at io.restassured.internal.RequestSpecificationImpl.request(RequestSpecificationImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1029)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:816)
at groovy.lang.GroovyObject.invokeMethod(GroovyObject.java:39)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:45)
at org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:55)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:203)
at io.restassured.internal.RequestSpecificationImpl.request(RequestSpecificationImpl.groovy:291)
at io.restassured.internal.RequestSpecificationImpl.request(RequestSpecificationImpl.groovy)
at com.ahmed.utilities.restassured.RequestProcessingUtilities.sendRequest(RequestProcessingUtilities.java:72)
at com.ahmed.common.utilities.RestAPIHelper.performRestTransaction(RestAPIHelper.java:50)
at com.ahmed.rest.restapi.RestService.addBook(RestService.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBook -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.ahmed.rest.restapi.RestService@179ece50]" name="afterSuite" is-config="true" duration-ms="0" started-at="2021-07-08T18:04:02 PKT" finished-at="2021-07-08T18:04:02 PKT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.ahmed.rest.restapi.RestService -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
